pipeline {
    agent any

    environment {
        IMAGE_NAME = "your-dockerhub-username/filehub"
        AWS_REGION = "ap-south-1"
        EKS_CLUSTER = "filehub-cluster"
        KUBECONFIG_CREDENTIAL_ID = "kubeconfig-creds"
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/lokeshkarra/filehub-server-infra-devsecops.git'
            }
        }

        stage('Install dependencies') {
            steps {
                sh 'pip install -r app_code/backend/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'cd app_code/backend && python manage.py test'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}:${BUILD_NUMBER}", "app_code/backend")

                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIAL_ID}", variable: 'KUBECONFIG')]) {
                    sh """
                        kubectl set image deployment/filehub-deployment filehub=${IMAGE_NAME}:${BUILD_NUMBER}
                    """
                }
            }
        }

        stage('Security Scan') {
            steps {
                sh 'trivy image lokeshkarra/filehub-backend:${BUILD_NUMBER} || true'
            }
        }

    }
}
